default:
  image: docker:19.03.11

stages:
  #- check-versions
  #- publish-api-dev
  - build-services
  - build-charts
  #- build-clients
  #- deploy

variables:
  # secrets configured in UI/API:
  # - APOLLO_KEY
  # - POSTGRESQL_PASSWORD
  # - FACEBOOK_APP_ID
  # - FACEBOOK_APP_SECRET
  # - GOOGLE_CLIENT_ID
  # - GOOGLE_CLIENT_SECRET
  # - RECAPTCHA_SECRET
  DOCKER_DRIVER: overlay2 
  DOCKER_TLS_CERTDIR: "/certs"
  HELM_EXPERIMENTAL_OCI: "1"

services:
  - docker:19.03.11-dind

before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"

# publish-api-dev:
#   stage: publish-api-dev
#   image: node
#   before_script: []
#   script:
#     - cd backend-apollo
#     - npx apollo service:push --graph=writerite-2020-04-24 --variant=$CI_COMMIT_REF_SLUG --localSchemaFile=schema.graphql
#   services: []


build-backend-apollo:
  stage: build-services
  script:
    - apk add --update nodejs
    - cd backend-apollo
    - sh dockerbuild.sh

build-writerite-backend:
  stage: build-charts
  image: debian
  before_script: []
  script:
    - apt update
    - apt install -y curl gnupg apt-transport-https
    - curl https://helm.baltorepo.com/organization/signing.asc | apt-key add -
    - curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
    - echo "deb https://baltocdn.com/helm/stable/debian/ all main" | tee -a /etc/apt/sources.list.d/helm-stable-debian.list
    - echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | tee -a /etc/apt/sources.list.d/kubernetes.list
    - apt update
    - apt install -y helm kubectl
    - cd charts/writerite-backend
    - helm dependency build
    - tar -xf charts/postgresql* -C charts
    - rm charts/postgresql*.tgz
    - mv init.sql charts/postgresql/files/docker-entrypoint-initdb.d/
    - cd ..
    - helm registry login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - helm chart save writerite-backend "$CI_REGISTRY_IMAGE/writerite-backend" | tee stdout
    - helm chart push "$(head -1 stdout | sed 's/ref:\s*\(.*\)/\1/')"

build-writerite-backend-apollo:
  stage: build-charts
  image: debian
  before_script: []
  script:
    - apt update
    - apt install -y curl gnupg apt-transport-https
    - curl https://helm.baltorepo.com/organization/signing.asc | apt-key add -
    - curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
    - echo "deb https://baltocdn.com/helm/stable/debian/ all main" | tee -a /etc/apt/sources.list.d/helm-stable-debian.list
    - echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | tee -a /etc/apt/sources.list.d/kubernetes.list
    - apt update
    - apt install -y helm kubectl
    - cd charts
    - helm registry login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - helm chart save writerite-backend-apollo "$CI_REGISTRY_IMAGE/writerite-backend-apollo" | tee stdout
    - helm chart push "$(head -1 stdout | sed 's/ref:\s*\(.*\)/\1/')"

# deploy:
#   stage: deploy
#   image: debian
#   environment:
#     name: production
#     url: https://api.writerite.site/
#   before_script: []
#   script:
#     - apt update
#     - apt install -y curl gnupg apt-transport-https
#     - curl https://helm.baltorepo.com/organization/signing.asc | apt-key add -
#     - curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
#     - echo "deb https://baltocdn.com/helm/stable/debian/ all main" | tee -a /etc/apt/sources.list.d/helm-stable-debian.list
#     - echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | tee -a /etc/apt/sources.list.d/kubernetes.list
#     - apt update
#     - apt install -y helm kubectl
#     - cd charts
#     - |-
#       cat << EOF > values.yaml
#       postgresql:
#         postgresqlPassword: "$POSTGRESQL_PASSWORD"
#       writerite-backend-apollo:
#         apolloKey: $APOLLO_KEY
#         database:
#           user: "postgres"
#           password: "$POSTGRESQL_PASSWORD"
#           host: "writerite-backend-postgresql"
#           port: "5432"
#           database: "postgres"
#         redis:
#           host: "writerite-backend-redis-master"
#           port: "6379"
#         googleClient:
#           id: "$GOOGLE_CLIENT_ID"
#           secret: "$GOOGLE_CLIENT_SECRET"
#         facebookApp:
#           id: "$FACEBOOK_APP_ID"
#           secret: "$FACEBOOK_APP_SECRET"
#         recaptcha:
#           secret: "$RECAPTCHA_SECRET"
#       EOF
#     - cat values.yaml
#     #- helm upgrade -i --reset-values -f values.yaml writerite-backend writerite-backend
#   services: []
