default:
  image: docker:19.03

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"
  POSTGRES_USER: prisma
  POSTGRES_PASSWORD: prisma
  PRISMA_CONFIG: |
    port: 4466
    databases:
      default:
        connector: postgres
        host: postgres
        port: 5432
        user: $POSTGRES_USER
        password: $POSTGRES_PASSWORD
  PRISMA_ENDPOINT: http://localhost:4466/writerite/build
build-backend-apollo:
  stage: build
  variables:
    DOCKER_NETWORK_ID: build-$CI_JOB_ID
  script:
    - docker network create $DOCKER_NETWORK_ID
    - docker run --name httpd -d -p 8080:80 httpd:alpine
    # - docker run --name postgres -d -e POSTGRES_USER -e POSTGRES_PASSWORD --network=$DOCKER_NETWORK_ID postgres:11.5-alpine
    # - docker run --name prisma -d -e PRISMA_CONFIG --network=$DOCKER_NETWORK_ID -p 4466:4466 prismagraphql/prisma:1.34
    # - docker exec prisma apk add curl
    - apk add curl
    - sleep 10
    - curl http://docker:8080
    # - docker port prisma
    # - docker exec prisma curl http://localhost:4466/management
    # - curl http://127.0.0.1:4466/management
    # - apk add --update nodejs npm zsh python2 make g++
    # - cd backend-apollo
    # - npm install
    # - sh dockerbuild.sh build
  # note that prisma cannot be run as a service due to
  # https://gitlab.com/gitlab-org/gitlab-runner/issues/1042
  services:
    - docker:19.03-dind
