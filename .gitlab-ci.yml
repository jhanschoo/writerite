default:
  image: docker:19.03.11

stages:
  - check-versions
  - publish-api-dev
  - build-services
  - build-meta
  - build-clients
  - deploy

variables:
  # secrets configured in UI/API:
  # - APOLLO_KEY
  # - POSTGRESQL_PASSWORD
  # - FACEBOOK_APP_ID
  # - FACEBOOK_APP_SECRET
  # - GOOGLE_CLIENT_ID
  # - GOOGLE_CLIENT_SECRET
  # - RECAPTCHA_SECRET
  DOCKER_DRIVER: overlay2 
  DOCKER_TLS_CERTDIR: "/certs"
  HELM_EXPERIMENTAL_OCI: "1"
  DEPLOY_VER: 0.1.0-dev1

services:
  - docker:19.03.11-dind

before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"

publish-api-dev:
  stage: publish-api-dev
  image: node
  before_script: []
  script:
    - cd backend-apollo
    - npx apollo service:push --graph=writerite-2020-04-24 --variant=$CI_COMMIT_REF_SLUG --localSchemaFile=schema.graphql
  services: []


build-backend-apollo:
  stage: build-services
  script:
    - apk add --update nodejs
    - cd backend-apollo
    - sh dockerbuild.sh

build-writerite-backend-apollo:
  stage: build-services
  image: dtzar/helm-kubectl
  before_script: []
  script:
    - cd charts/writerite-backend-apollo
    - helm registry login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - helm chart save . "$CI_REGISTRY_IMAGE/writerite-backend-apollo" | tee stdout
    - helm chart push "$(head -1 stdout | sed 's/ref:\s*\(.*\)/\1/')"

build-writerite-backend:
  stage: build-meta
  image: dtzar/helm-kubectl
  before_script: []
  script:
    - cd charts/writerite-backend
    - helm registry login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo update
    # contrary to documentation, oci repositories not yet supported
    # https://github.com/helm/helm/pull/7613
    - helm dependency build
    - tar -xf charts/postgresql* -C charts
    - rm charts/postgresql*.tgz
    - mv init.sql charts/postgresql/files/docker-entrypoint-initdb.d/
    - helm chart save . "$CI_REGISTRY_IMAGE/writerite-backend" | tee stdout
    - helm chart push "$(head -1 stdout | sed 's/ref:\s*\(.*\)/\1/')"

deploy:
  stage: deploy
  image: dtzar/helm-kubectl
  environment:
    name: production
    url: https://api.writerite.site/
  before_script: []
  script:
    - mkdir tmp
    - cd tmp
    - helm registry login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - helm chart pull "$CI_REGISTRY_IMAGE/writerite-backend:$DEPLOY_VER"
    - helm chart export "$CI_REGISTRY_IMAGE/writerite-backend:$DEPLOY_VER"
    - |-
      cat << EOF > values.yaml
      postgresql:
        postgresqlPassword: "$POSTGRESQL_PASSWORD"
      writerite-backend-apollo:
        apolloKey: $APOLLO_KEY
        jwt:
          privateKey: "$JWT_PRIVATE_KEY"
          publicKey: "$JWT_PUBLIC_KEY"
        database:
          user: "postgres"
          password: "$POSTGRESQL_PASSWORD"
          host: "writerite-backend-postgresql"
          port: "5432"
          database: "postgres"
        redis:
          host: "writerite-backend-redis-master"
          port: "6379"
        googleClient:
          id: "$GOOGLE_CLIENT_ID"
          secret: "$GOOGLE_CLIENT_SECRET"
        facebookApp:
          id: "$FACEBOOK_APP_ID"
          secret: "$FACEBOOK_APP_SECRET"
        recaptcha:
          secret: "$RECAPTCHA_SECRET"
      EOF
    - helm upgrade -i --reset-values -f values.yaml writerite-backend writerite-backend
  services: []
