default:
  image: docker:19.03.11

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - frontend-react/.npm/

stages:
  - publish-api-graph
  - build-projects
  - build-meta
  - deploy

variables:
  # secrets configured in UI/API:
  # - APOLLO_KEY
  # - JWT_PRIVATE_KEY
  # - JWT_PUBLIC_KEY
  # - POSTGRESQL_PASSWORD
  # - FACEBOOK_APP_ID
  # - FACEBOOK_APP_SECRET
  # - GAPI_CLIENT_ID
  # - GAPI_CLIENT_SECRET
  # - RECAPTCHA_SECRET
  DOCKER_DRIVER: overlay2 
  DOCKER_TLS_CERTDIR: "/certs"
  HELM_EXPERIMENTAL_OCI: "1"
  DEPLOY_VER: 0.1.0-dev7

services:
  - docker:19.03.11-dind

before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY" || true
  - helm registry login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY" || true

publish-api-graph:
  stage: publish-api-graph
  needs: []
  image: node:14.7
  script:
    - cd backend-apollo
    - npx apollo service:push --graph=writerite-2020-04-24 --variant=$CI_COMMIT_REF_SLUG --localSchemaFile=schema.graphql
  services: []


build-backend-apollo:
  stage: build-projects
  needs: []
  script:
    - apk add --update nodejs
    - cd backend-apollo
    - sh dockerbuild.sh

pages:
  stage: build-projects
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
  needs:
    - "publish-api-graph"
  image: node:14.7
  script:
    - cd frontend-react
    - NODE_ENV="production" npm ci --cache .npm --prefer-offline
    - cd ..
    - mv frontend-react/build public
  services: []
  artifacts:
    paths:
      - public

build-backend-apollo-chart:
  stage: build-projects
  needs: []
  image: dtzar/helm-kubectl:3.2.1
  script:
    - cd charts/writerite-backend-apollo
    - helm registry login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - helm chart save . "$CI_REGISTRY_IMAGE/writerite-backend-apollo" | tee stdout
    - helm chart push "$(head -1 stdout | sed 's/ref:\s*\(.*\)/\1/')"
  services: []

build-backend-chart:
  stage: build-meta
  needs:
    - "build-backend-apollo-chart"
  image: dtzar/helm-kubectl:3.2.1
  script:
    - cd charts/writerite-backend
    - helm registry login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo update
    # contrary to documentation, oci repositories not yet supported
    # https://github.com/helm/helm/pull/7613
    - helm dependency build
    - tar -xf charts/postgresql* -C charts
    - rm charts/postgresql*.tgz
    - mv init.sql charts/postgresql/files/docker-entrypoint-initdb.d/
    - helm chart save . "$CI_REGISTRY_IMAGE/writerite-backend" | tee stdout
    - helm chart push "$(head -1 stdout | sed 's/ref:\s*\(.*\)/\1/')"
  services: []

deploy-backend:
  stage: deploy
  needs:
    - publish-api-graph
    - build-backend-apollo
    - build-backend-chart
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
  image: dtzar/helm-kubectl:3.2.1
  environment:
    name: production
    url: https://api.writerite.site/
  script:
    - mkdir tmp
    - cd tmp
    - helm registry login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - helm chart pull "$CI_REGISTRY_IMAGE/writerite-backend:$DEPLOY_VER"
    - helm chart export "$CI_REGISTRY_IMAGE/writerite-backend:$DEPLOY_VER"
    - |-
      cat << EOF > values.yaml
      postgresql:
        postgresqlPassword: "$POSTGRESQL_PASSWORD"
      writerite-backend-apollo:
        apolloKey: "$APOLLO_KEY"
        jwt:
          privateKey: '$JWT_PRIVATE_KEY'
          publicKey: '$JWT_PUBLIC_KEY'
        database:
          user: "postgres"
          password: "$POSTGRESQL_PASSWORD"
          host: "writerite-backend-postgresql"
          port: "5432"
          database: "postgres"
        redis:
          host: "writerite-backend-redis-master"
          port: "6379"
        gapiClient:
          id: "$GAPI_CLIENT_ID"
          secret: "$GAPI_CLIENT_SECRET"
        facebookApp:
          id: "$FACEBOOK_APP_ID"
          secret: "$FACEBOOK_APP_SECRET"
        recaptcha:
          secret: "$RECAPTCHA_SECRET"
      EOF
    - helm upgrade -i --reset-values -f values.yaml writerite-backend writerite-backend
  services: []
