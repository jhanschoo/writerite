version: '3.7'
services:
  wright-node:
    image: jhanschoo/writerite-wright-node:1.0.0-dev2
    restart: always
    env_file: .env
    environment:
      # in production, URL is in http
      # TODO: implement reading ca https://stackoverflow.com/questions/10888610/ignore-invalid-self-signed-ssl-certificate-in-node-js-with-https-request
      GRAPHQL_HTTP: https://backend-apollo:4000/graphql
      NODE_TLS_REJECT_UNAUTHORIZED: '0'
      REDIS_HOST: redis
      REDIS_PORT: '6379'
  backend-apollo:
    image: jhanschoo/writerite-backend-apollo:1.0.0-dev1
    restart: always
    ports:
      - '4000:4000'
    env_file: .env
    environment:
      PRISMA_ENDPOINT: http://prisma:4466/writerite/production
      PRISMA_MANAGEMENT_API_SECRET: writerite-prisma
      REDIS_HOST: redis
      REDIS_PORT: '6379'
      CERT_FILE: /run/secrets/https_cert
      KEY_FILE: /run/secrets/https_key
    secrets:
      - https_cert
      - https_key
  redis:
    image: redis:5.0.4
    restart: always
    ports:
      - '6379:6379'
  prisma:
    image: prismagraphql/prisma:1.34
    restart: always
    ports:
      - '4466:4466'
    environment:
      PRISMA_CONFIG: |
        port: 4466
        managementApiSecret: writerite-prisma
        databases:
          default:
            connector: postgres
            host: postgres
            port: 5432
            user: prisma
            password: prisma
  postgres:
    image: postgres:11.2
    restart: always
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: prisma
      POSTGRES_PASSWORD: prisma
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres:/var/lib/postgresql/data
volumes:
  postgres: null
secrets:
  https_cert:
    file: pki/wr-dev.secp256r1.crt
  https_key:
    file: pki/wr-dev.secp256r1.private
